const initCart=()=>{let cart=JSON.parse(localStorage.getItem("cart"))||[];const ShoppingBagCounters=document.querySelectorAll(".count-item"),cartDivs=document.querySelectorAll(".addedProducts"),subtotalElements=document.querySelectorAll(".subTotal"),totalElements=document.querySelectorAll(".total");if(!cartDivs.length)return void console.warn("Cart elements not found, waiting...");const updateQuantity=(index,change)=>{index>=0&&index<cart.length&&(cart[index].quantity+=change,cart[index].quantity<=0?removeFromCart(index):updateCart())},removeFromCart=index=>{cart.splice(index,1),updateCart()},updateCart=()=>{(()=>{let totalItems=cart.reduce(((sum,item)=>sum+item.quantity),0);ShoppingBagCounters.forEach((el=>el.textContent=totalItems))})(),(()=>{let subtotal=cart.reduce(((sum,item)=>sum+item.price*item.quantity),0),total=subtotal;subtotalElements.forEach((el=>el.textContent=`${subtotal.toFixed(2)}`)),totalElements.forEach((el=>el.textContent=`${total.toFixed(2)}`))})(),localStorage.setItem("cart",JSON.stringify(cart)),cartDivs.forEach((cartDiv=>{cartDiv.innerHTML="",0!==cart.length?cart.forEach(((item,index)=>{const cartItem=document.createElement("div");cartItem.classList.add("cart-item","d-flex","align-items-center","bg-secondary-subtle","justify-content-between","mb-2","p-2","rounded-2","border"),cartItem.innerHTML=`\n                    <span class="cart-item-name">${item.productName} ($${item.price})</span>\n                    <div>\n                        <div class="btn-group ms-1" role="group">\n                            <button class="btn btn-sm btn-outline-secondary btn-decrease rounded-start">-</button>\n                            <button class="btn border-secondary rounded-0">${item.quantity}</button>\n                            <button class="btn btn-sm btn-outline-secondary btn-increase rounded-end">+</button>\n                            <button class="ms-2 btn btn-sm text-danger btn-remove rounded"><i class="fa-solid fa-x"></i></button>\n                        </div>\n                    </div>\n                `,cartItem.querySelector(".btn-decrease").addEventListener("click",(()=>updateQuantity(index,-1))),cartItem.querySelector(".btn-increase").addEventListener("click",(()=>updateQuantity(index,1))),cartItem.querySelector(".btn-remove").addEventListener("click",(()=>removeFromCart(index))),cartDiv.appendChild(cartItem)})):cartDiv.innerHTML='<p class="text-center text-muted h2">Your cart is empty</p>'}))};updateCart(),window.addToCart=(productName,price,productImg)=>{const existItem=cart.find((i=>i.productName===productName));existItem?existItem.quantity++:cart.push({productName:productName,price:price,quantity:1}),updateCart()}},observeCartChanges=()=>{const observer=new MutationObserver((()=>{document.querySelectorAll(".addedProducts").length&&(observer.disconnect(),initCart())}));observer.observe(document.body,{childList:!0,subtree:!0})};document.addEventListener("DOMContentLoaded",(()=>{observeCartChanges()}));